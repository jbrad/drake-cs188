{"ast":null,"code":"var _jsxFileName = \"/Users/scottmolloy/Desktop/04 software_engineering/cartTest/hello-next/pages/cart.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport fetch from 'isomorphic-unfetch';\n\nconst Index = props => __jsx(\"section\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 4,\n    columnNumber: 5\n  }\n}, __jsx(\"h1\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 9\n  }\n}, props.customer.firstName, \"'s Cart\"), __jsx(\"p\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 9\n  }\n}, \"You have \", props.cartItems.length, \" \", props.cartItems.length === 1 ? 'item' : 'items', \" in your cart.\"));\n\nIndex.getInitialProps = async function () {\n  const customerResponse = await fetch(`http://localhost:5555/customers`);\n  const [customer] = await customerResponse.json();\n  const cartResponse = await fetch(`http://localhost:5555/customers/${customer.customerId}/carts`);\n  const [cart] = await cartResponse.json();\n  const cartItemResponse = await fetch(`http://localhost:5555/carts/${cart.cartId}/cart-items`);\n  const cartItems = await cartItemResponse.json();\n  return {\n    customer,\n    cartItems\n  };\n};\n\nexport default Index;","map":{"version":3,"sources":["/Users/scottmolloy/Desktop/04 software_engineering/cartTest/hello-next/pages/cart.js"],"names":["fetch","Index","props","customer","firstName","cartItems","length","getInitialProps","customerResponse","json","cartResponse","customerId","cart","cartItemResponse","cartId"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,oBAAlB;;AAEA,MAAMC,KAAK,GAAGC,KAAK,IACf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAKA,KAAK,CAACC,QAAN,CAAeC,SAApB,YADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAaF,KAAK,CAACG,SAAN,CAAgBC,MAA7B,OAAsCJ,KAAK,CAACG,SAAN,CAAgBC,MAAhB,KAA2B,CAA3B,GAA+B,MAA/B,GAAwC,OAA9E,mBAFJ,CADJ;;AAQAL,KAAK,CAACM,eAAN,GAAwB,kBAAiB;AACrC,QAAMC,gBAAgB,GAAG,MAAMR,KAAK,CAAE,iCAAF,CAApC;AACA,QAAM,CAACG,QAAD,IAAa,MAAMK,gBAAgB,CAACC,IAAjB,EAAzB;AACA,QAAMC,YAAY,GAAG,MAAMV,KAAK,CAAE,mCAAkCG,QAAQ,CAACQ,UAAW,QAAxD,CAAhC;AACA,QAAM,CAACC,IAAD,IAAS,MAAMF,YAAY,CAACD,IAAb,EAArB;AACA,QAAMI,gBAAgB,GAAG,MAAMb,KAAK,CAAE,+BAA8BY,IAAI,CAACE,MAAO,aAA5C,CAApC;AACA,QAAMT,SAAS,GAAG,MAAMQ,gBAAgB,CAACJ,IAAjB,EAAxB;AAEA,SAAO;AACHN,IAAAA,QADG;AAEHE,IAAAA;AAFG,GAAP;AAIH,CAZD;;AAcA,eAAeJ,KAAf","sourcesContent":["import fetch from 'isomorphic-unfetch';\n\nconst Index = props => (\n    <section>\n        <h1>{props.customer.firstName}'s Cart</h1>\n        <p>You have {props.cartItems.length} {props.cartItems.length === 1 ? 'item' : 'items'} in your cart.</p>\n    </section>\n);\n\n\nIndex.getInitialProps = async function() {\n    const customerResponse = await fetch(`http://localhost:5555/customers`);\n    const [customer] = await customerResponse.json();\n    const cartResponse = await fetch(`http://localhost:5555/customers/${customer.customerId}/carts`);\n    const [cart] = await cartResponse.json();\n    const cartItemResponse = await fetch(`http://localhost:5555/carts/${cart.cartId}/cart-items`);\n    const cartItems = await cartItemResponse.json();\n    \n    return {\n        customer,\n        cartItems\n    };\n};\n\nexport default Index;"]},"metadata":{},"sourceType":"module"}