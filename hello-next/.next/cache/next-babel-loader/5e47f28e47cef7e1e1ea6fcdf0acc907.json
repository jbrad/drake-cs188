{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/scottmolloy/Desktop/04 software_engineering/cartTest/hello-next/pages/cart.js\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Link from 'next/link';\nimport fetch from 'isomorphic-unfetch';\n\nvar Index = function Index(props) {\n  return __jsx(\"section\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5,\n      columnNumber: 5\n    }\n  }, __jsx(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 9\n    }\n  }, props.customer.firstName, \"'s Cart\"), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 9\n    }\n  }, \"You have \", props.cartItems.length, \" \", props.cartItems.length === 1 ? 'item' : 'items', \" in your cart.\"), __jsx(\"ul\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 9\n    }\n  }, props.items.map(function (item) {\n    return __jsx(\"li\", {\n      key: item.itemId,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 17\n      }\n    }, __jsx(Link, {\n      href: \"/items/[itemId]\",\n      as: \"/items/\".concat(item.itemId),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 21\n      }\n    }, __jsx(\"a\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 25\n      }\n    }, item.description)));\n  })));\n};\n\nIndex.getInitialProps = function _callee() {\n  var customerResponse, _await$customerRespon, _await$customerRespon2, customer, cartResponse, _await$cartResponse$j, _await$cartResponse$j2, cart, cartItemResponse, cartItems, itemsToFetch, itemResponses, items;\n\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(fetch(\"http://localhost:5555/customers\"));\n\n        case 2:\n          customerResponse = _context.sent;\n          _context.next = 5;\n          return _regeneratorRuntime.awrap(customerResponse.json());\n\n        case 5:\n          _await$customerRespon = _context.sent;\n          _await$customerRespon2 = _slicedToArray(_await$customerRespon, 1);\n          customer = _await$customerRespon2[0];\n          _context.next = 10;\n          return _regeneratorRuntime.awrap(fetch(\"http://localhost:5555/customers/\".concat(customer.customerId, \"/carts\")));\n\n        case 10:\n          cartResponse = _context.sent;\n          _context.next = 13;\n          return _regeneratorRuntime.awrap(cartResponse.json());\n\n        case 13:\n          _await$cartResponse$j = _context.sent;\n          _await$cartResponse$j2 = _slicedToArray(_await$cartResponse$j, 1);\n          cart = _await$cartResponse$j2[0];\n          _context.next = 18;\n          return _regeneratorRuntime.awrap(fetch(\"http://localhost:5555/carts/\".concat(cart.cartId, \"/cart-items\")));\n\n        case 18:\n          cartItemResponse = _context.sent;\n          _context.next = 21;\n          return _regeneratorRuntime.awrap(cartItemResponse.json());\n\n        case 21:\n          cartItems = _context.sent;\n          itemsToFetch = cartItems.map(function (cartItem) {\n            return fetch(\"http://localhost:5555/items/\".concat(cartItem.itemId));\n          });\n          _context.next = 25;\n          return _regeneratorRuntime.awrap(Promise.all(itemsToFetch));\n\n        case 25:\n          itemResponses = _context.sent;\n          _context.next = 28;\n          return _regeneratorRuntime.awrap(Promise.all(itemResponses.map(function (itemResponse) {\n            return itemResponse.json();\n          })));\n\n        case 28:\n          items = _context.sent;\n          return _context.abrupt(\"return\", {\n            customer: customer,\n            cartItems: cartItems,\n            items: items\n          });\n\n        case 30:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexport default Index;","map":{"version":3,"sources":["/Users/scottmolloy/Desktop/04 software_engineering/cartTest/hello-next/pages/cart.js"],"names":["Link","fetch","Index","props","customer","firstName","cartItems","length","items","map","item","itemId","description","getInitialProps","customerResponse","json","customerId","cartResponse","cart","cartId","cartItemResponse","itemsToFetch","cartItem","Promise","all","itemResponses","itemResponse"],"mappings":";;;;;;;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAAAC,KAAK;AAAA,SACf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKA,KAAK,CAACC,QAAN,CAAeC,SAApB,YADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAaF,KAAK,CAACG,SAAN,CAAgBC,MAA7B,OAAsCJ,KAAK,CAACG,SAAN,CAAgBC,MAAhB,KAA2B,CAA3B,GAA+B,MAA/B,GAAwC,OAA9E,mBAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKJ,KAAK,CAACK,KAAN,CAAYC,GAAZ,CAAgB,UAAAC,IAAI;AAAA,WACjB;AAAI,MAAA,GAAG,EAAEA,IAAI,CAACC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,MAAC,IAAD;AAAM,MAAA,IAAI,EAAC,iBAAX;AAA6B,MAAA,EAAE,mBAAYD,IAAI,CAACC,MAAjB,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAID,IAAI,CAACE,WAAT,CADJ,CADJ,CADiB;AAAA,GAApB,CADL,CAHJ,CADe;AAAA,CAAnB;;AAiBAV,KAAK,CAACW,eAAN,GAAwB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACWZ,KAAK,mCADhB;;AAAA;AACda,UAAAA,gBADc;AAAA;AAAA,2CAEKA,gBAAgB,CAACC,IAAjB,EAFL;;AAAA;AAAA;AAAA;AAEbX,UAAAA,QAFa;AAAA;AAAA,2CAGOH,KAAK,2CAAoCG,QAAQ,CAACY,UAA7C,YAHZ;;AAAA;AAGdC,UAAAA,YAHc;AAAA;AAAA,2CAICA,YAAY,CAACF,IAAb,EAJD;;AAAA;AAAA;AAAA;AAIbG,UAAAA,IAJa;AAAA;AAAA,2CAKWjB,KAAK,uCAAgCiB,IAAI,CAACC,MAArC,iBALhB;;AAAA;AAKdC,UAAAA,gBALc;AAAA;AAAA,2CAMIA,gBAAgB,CAACL,IAAjB,EANJ;;AAAA;AAMdT,UAAAA,SANc;AAOde,UAAAA,YAPc,GAOCf,SAAS,CAACG,GAAV,CAAc,UAACa,QAAD;AAAA,mBAAcrB,KAAK,uCAAgCqB,QAAQ,CAACX,MAAzC,EAAnB;AAAA,WAAd,CAPD;AAAA;AAAA,2CAQQY,OAAO,CAACC,GAAR,CAAYH,YAAZ,CARR;;AAAA;AAQdI,UAAAA,aARc;AAAA;AAAA,2CASAF,OAAO,CAACC,GAAR,CAAYC,aAAa,CAAChB,GAAd,CAAkB,UAACiB,YAAD;AAAA,mBAAkBA,YAAY,CAACX,IAAb,EAAlB;AAAA,WAAlB,CAAZ,CATA;;AAAA;AASdP,UAAAA,KATc;AAAA,2CAWb;AACHJ,YAAAA,QAAQ,EAARA,QADG;AAEHE,YAAAA,SAAS,EAATA,SAFG;AAGHE,YAAAA,KAAK,EAALA;AAHG,WAXa;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAxB;;AAkBA,eAAeN,KAAf","sourcesContent":["import Link from 'next/link';\nimport fetch from 'isomorphic-unfetch';\n\nconst Index = props => (\n    <section>\n        <h1>{props.customer.firstName}'s Cart</h1>\n        <p>You have {props.cartItems.length} {props.cartItems.length === 1 ? 'item' : 'items'} in your cart.</p>\n        <ul>\n            {props.items.map(item => (\n                <li key={item.itemId}>\n                    <Link href=\"/items/[itemId]\" as={`/items/${item.itemId}`}>\n                        <a>{item.description}</a>\n                    </Link>\n                </li>\n            ))}\n        </ul>\n    </section>\n);\n\n\nIndex.getInitialProps = async function() {\n    const customerResponse = await fetch(`http://localhost:5555/customers`);\n    const [customer] = await customerResponse.json();\n    const cartResponse = await fetch(`http://localhost:5555/customers/${customer.customerId}/carts`);\n    const [cart] = await cartResponse.json();\n    const cartItemResponse = await fetch(`http://localhost:5555/carts/${cart.cartId}/cart-items`);\n    const cartItems = await cartItemResponse.json();\n    const itemsToFetch = cartItems.map((cartItem) => fetch(`http://localhost:5555/items/${cartItem.itemId}`));\n    const itemResponses = await Promise.all(itemsToFetch);\n    const items = await Promise.all(itemResponses.map((itemResponse) => itemResponse.json()));\n    \n    return {\n        customer,\n        cartItems,\n        items \n    };\n};\n\nexport default Index;\n\n"]},"metadata":{},"sourceType":"module"}