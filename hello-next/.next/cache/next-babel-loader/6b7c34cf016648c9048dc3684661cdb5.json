{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/scottmolloy/Desktop/04 software_engineering/cartTest/hello-next/pages/items/[itemId].js\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport fetch from 'isomorphic-unfetch';\nimport uuid from 'uuid';\nimport Link from 'next/link';\nimport { getCustomersCart } from '../../services/cart-item-service';\n\nvar addItemToCart = function addItemToCart(itemId) {\n  var customerResponse, _await$customerRespon, _await$customerRespon2, customer, cartResponse, _await$cartResponse$j, _await$cartResponse$j2, cart;\n\n  return _regeneratorRuntime.async(function addItemToCart$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(fetch('http://localhost:5555/customers'));\n\n        case 2:\n          customerResponse = _context.sent;\n          _context.next = 5;\n          return _regeneratorRuntime.awrap(customerResponse.json());\n\n        case 5:\n          _await$customerRespon = _context.sent;\n          _await$customerRespon2 = _slicedToArray(_await$customerRespon, 1);\n          customer = _await$customerRespon2[0];\n          _context.next = 10;\n          return _regeneratorRuntime.awrap(fetch(\"http://localhost:5555/customers/\".concat(customer.customerId, \"/carts\")));\n\n        case 10:\n          cartResponse = _context.sent;\n          _context.next = 13;\n          return _regeneratorRuntime.awrap(cartResponse.json());\n\n        case 13:\n          _await$cartResponse$j = _context.sent;\n          _await$cartResponse$j2 = _slicedToArray(_await$cartResponse$j, 1);\n          cart = _await$cartResponse$j2[0];\n          _context.next = 18;\n          return _regeneratorRuntime.awrap(fetch(\"http://localhost:5555/cart-items\", {\n            method: 'POST',\n            body: JSON.stringify({\n              cartItemId: uuid.v4(),\n              cartId: \"\".concat(cart.cartId),\n              itemId: itemId,\n              quantity: 1\n            }),\n            headers: {\n              'Content-Type': 'application/json'\n            }\n          }));\n\n        case 18:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nvar Index = function Index(props) {\n  return __jsx(\"section\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, __jsx(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, \"Item Details\"), __jsx(\"img\", {\n    src: props.item.image,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, \"Description: \", props.item.description), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, \"Price: $\", props.item.price), __jsx(\"button\", {\n    type: \"button\",\n    onClick: function onClick() {\n      return addItemToCart(props.item.itemId);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, \"Add to Cart\"), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, \"Number of times this item is in the cart: \", numberOfTimesInCart), __jsx(Link, {\n    href: \"/cart\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, __jsx(\"a\", {\n    title: \"view cart!\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }, \"view cart!\")));\n};\n\nIndex.getInitialProps = function _callee(context) {\n  var itemId, res, item, _await$getCustomersCa, cartItems, numberOfTimesInCart;\n\n  return _regeneratorRuntime.async(function _callee$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          itemId = context.query.itemid;\n          _context2.next = 3;\n          return _regeneratorRuntime.awrap(fetch(\"http://localhost:5555/items/\".concat(itemId)));\n\n        case 3:\n          res = _context2.sent;\n          _context2.next = 6;\n          return _regeneratorRuntime.awrap(res.json());\n\n        case 6:\n          item = _context2.sent;\n          _context2.next = 9;\n          return _regeneratorRuntime.awrap(getCustomersCart());\n\n        case 9:\n          _await$getCustomersCa = _context2.sent;\n          cartItems = _await$getCustomersCa.cartItems;\n          numberOfTimesInCart = cartItems.filter(function (cartItem) {\n            return cartItem.itemId === itemId;\n          }).length; //    console.log(itemId)\n          //    console.log(res)\n          //    console.log(`Show data fetched. Item: ${item}` );\n\n          return _context2.abrupt(\"return\", {\n            item: item,\n            cartItems: cartItems,\n            numberOfTimesInCart: numberOfTimesInCart\n          });\n\n        case 13:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexport default Index;","map":{"version":3,"sources":["/Users/scottmolloy/Desktop/04 software_engineering/cartTest/hello-next/pages/items/[itemId].js"],"names":["fetch","uuid","Link","getCustomersCart","addItemToCart","itemId","customerResponse","json","customer","customerId","cartResponse","cart","method","body","JSON","stringify","cartItemId","v4","cartId","quantity","headers","Index","props","item","image","description","price","numberOfTimesInCart","getInitialProps","context","query","itemid","res","cartItems","filter","cartItem","length"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,oBAAlB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,gBAAT,QAAiC,kCAAjC;;AAIA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAAOC,MAAP;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACaL,KAAK,CAAC,iCAAD,CADlB;;AAAA;AACZM,UAAAA,gBADY;AAAA;AAAA,2CAEOA,gBAAgB,CAACC,IAAjB,EAFP;;AAAA;AAAA;AAAA;AAEXC,UAAAA,QAFW;AAAA;AAAA,2CAGSR,KAAK,2CAAoCQ,QAAQ,CAACC,UAA7C,YAHd;;AAAA;AAGZC,UAAAA,YAHY;AAAA;AAAA,2CAIGA,YAAY,CAACH,IAAb,EAJH;;AAAA;AAAA;AAAA;AAIXI,UAAAA,IAJW;AAAA;AAAA,2CAMZX,KAAK,qCAAqC;AAChDY,YAAAA,MAAM,EAAE,MADwC;AAEhDC,YAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBC,cAAAA,UAAU,EAAEf,IAAI,CAACgB,EAAL,EADK;AAEjBC,cAAAA,MAAM,YAAKP,IAAI,CAACO,MAAV,CAFW;AAGjBb,cAAAA,MAAM,EAANA,MAHiB;AAIjBc,cAAAA,QAAQ,EAAE;AAJO,aAAf,CAF0C;AAQhDC,YAAAA,OAAO,EAAE;AACL,8BAAgB;AADX;AARuC,WAArC,CANO;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAtB;;AAqBA,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAAAC,KAAK;AAAA,SACf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,EAEI;AAAK,IAAA,GAAG,EAAEA,KAAK,CAACC,IAAN,CAAWC,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAiBF,KAAK,CAACC,IAAN,CAAWE,WAA5B,CAHJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAYH,KAAK,CAACC,IAAN,CAAWG,KAAvB,CAJJ,EAKI;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,OAAO,EAAE;AAAA,aAAMtB,aAAa,CAACkB,KAAK,CAACC,IAAN,CAAWlB,MAAZ,CAAnB;AAAA,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBALJ,EAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mDAA8CsB,mBAA9C,CANJ,EAOI,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAG,IAAA,KAAK,EAAC,YAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,CAPJ,CADe;AAAA,CAAnB;;AAeAN,KAAK,CAACO,eAAN,GAAwB,iBAAeC,OAAf;AAAA;;AAAA;AAAA;AAAA;AAAA;AACdxB,UAAAA,MADc,GACLwB,OAAO,CAACC,KAAR,CAAcC,MADT;AAAA;AAAA,2CAEF/B,KAAK,uCAAgCK,MAAhC,EAFH;;AAAA;AAEd2B,UAAAA,GAFc;AAAA;AAAA,2CAGDA,GAAG,CAACzB,IAAJ,EAHC;;AAAA;AAGdgB,UAAAA,IAHc;AAAA;AAAA,2CAIQpB,gBAAgB,EAJxB;;AAAA;AAAA;AAIZ8B,UAAAA,SAJY,yBAIZA,SAJY;AAKdN,UAAAA,mBALc,GAKQM,SAAS,CAACC,MAAV,CAAiB,UAACC,QAAD;AAAA,mBAAcA,QAAQ,CAAC9B,MAAT,KAAoBA,MAAlC;AAAA,WAAjB,EAA2D+B,MALnE,EAMxB;AACA;AAEA;;AATwB,4CAWb;AACHb,YAAAA,IAAI,EAAJA,IADG;AAEHU,YAAAA,SAAS,EAATA,SAFG;AAGHN,YAAAA,mBAAmB,EAAnBA;AAHG,WAXa;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAxB;;AAkBA,eAAeN,KAAf","sourcesContent":["import fetch from 'isomorphic-unfetch';\nimport uuid from 'uuid';\nimport Link from 'next/link';\nimport { getCustomersCart } from '../../services/cart-item-service';\n\n\n\nconst addItemToCart = async (itemId) => {\n    const customerResponse = await fetch('http://localhost:5555/customers');\n    const [customer] = await customerResponse.json();\n    const cartResponse = await fetch(`http://localhost:5555/customers/${customer.customerId}/carts`);\n    const [cart] = await cartResponse.json();\n    \n    await fetch(`http://localhost:5555/cart-items`, {\n    method: 'POST',\n    body: JSON.stringify({\n        cartItemId: uuid.v4(),\n        cartId: `${cart.cartId}`,\n        itemId,\n        quantity: 1\n    }),\n    headers: {\n        'Content-Type': 'application/json'\n    }\n});\n}\n\n\nconst Index = props => (\n    <section>\n        <h1>Item Details</h1>\n        <img src={props.item.image} />\n        <p>Description: {props.item.description}</p>\n        <p>Price: ${props.item.price}</p>\n        <button type=\"button\" onClick={() => addItemToCart(props.item.itemId)}>Add to Cart</button>\n        <p>Number of times this item is in the cart: {numberOfTimesInCart}</p>\n        <Link href=\"/cart\">\n            <a title=\"view cart!\">view cart!</a>\n        </Link>\n    </section>\n);\n\n\nIndex.getInitialProps = async function(context) {\n    const itemId = context.query.itemid;\n    const res = await fetch(`http://localhost:5555/items/${itemId}`);\n    const item = await res.json();\n    const { cartItems } = await getCustomersCart();\n    const numberOfTimesInCart = cartItems.filter((cartItem) => cartItem.itemId === itemId).length;\n//    console.log(itemId)\n//    console.log(res)\n            \n//    console.log(`Show data fetched. Item: ${item}` );\n    \n    return {\n        item,\n        cartItems,\n        numberOfTimesInCart\n    };\n};\n\nexport default Index;"]},"metadata":{},"sourceType":"module"}