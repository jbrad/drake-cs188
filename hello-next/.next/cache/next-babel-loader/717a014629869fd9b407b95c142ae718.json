{"ast":null,"code":"var _jsxFileName = \"/Users/scottmolloy/Desktop/04 software_engineering/cartTest/hello-next/pages/items/[itemid].js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport fetch from 'isomorphic-unfetch';\nimport uuid from 'uuid';\nimport Link from 'next/link';\nimport { getCustomersCart } from '../services/cart-item-service';\n\nconst addItemToCart = async itemId => {\n  const customerResponse = await fetch('http://localhost:5555/customers');\n  const [customer] = await customerResponse.json();\n  const cartResponse = await fetch(`http://localhost:5555/customers/${customer.customerId}/carts`);\n  const [cart] = await cartResponse.json();\n  await fetch(`http://localhost:5555/cart-items`, {\n    method: 'POST',\n    body: JSON.stringify({\n      cartItemId: uuid.v4(),\n      cartId: `${cart.cartId}`,\n      itemId,\n      quantity: 1\n    }),\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  });\n};\n\nconst Index = props => __jsx(\"section\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }\n}, __jsx(\"h1\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }\n}, \"Item Details\"), __jsx(\"img\", {\n  src: props.item.image,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }\n}), __jsx(\"p\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }\n}, \"Description: \", props.item.description), __jsx(\"p\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }\n}, \"Price: $\", props.item.price), __jsx(\"button\", {\n  type: \"button\",\n  onClick: () => addItemToCart(props.item.itemId),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }\n}, \"Add to Cart\"), __jsx(\"p\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 1\n  }\n}, \"Number of times this item is in the cart: \", props.cartItems.filter(cartItem => cartItem.itemId === props.item.itemId).length), __jsx(Link, {\n  href: \"/cart\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }\n}, __jsx(\"a\", {\n  title: \"view cart!\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 13\n  }\n}, \"view cart!\")));\n\nIndex.getInitialProps = async function (context) {\n  const itemId = context.query.itemid;\n  const res = await fetch(`http://localhost:5555/items/${itemId}`);\n  const item = await res.json();\n  const {\n    cartItems\n  } = await getCustomersCart; //    console.log(itemId)\n  //    console.log(res)\n  //    console.log(`Show data fetched. Item: ${item}` );\n\n  return {\n    item\n  };\n};\n\nexport default Index;","map":{"version":3,"sources":["/Users/scottmolloy/Desktop/04 software_engineering/cartTest/hello-next/pages/items/[itemid].js"],"names":["fetch","uuid","Link","getCustomersCart","addItemToCart","itemId","customerResponse","customer","json","cartResponse","customerId","cart","method","body","JSON","stringify","cartItemId","v4","cartId","quantity","headers","Index","props","item","image","description","price","cartItems","filter","cartItem","length","getInitialProps","context","query","itemid","res"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,oBAAlB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,gBAAT,QAAiC,+BAAjC;;AAIA,MAAMC,aAAa,GAAG,MAAOC,MAAP,IAAkB;AACpC,QAAMC,gBAAgB,GAAG,MAAMN,KAAK,CAAC,iCAAD,CAApC;AACA,QAAM,CAACO,QAAD,IAAa,MAAMD,gBAAgB,CAACE,IAAjB,EAAzB;AACA,QAAMC,YAAY,GAAG,MAAMT,KAAK,CAAE,mCAAkCO,QAAQ,CAACG,UAAW,QAAxD,CAAhC;AACA,QAAM,CAACC,IAAD,IAAS,MAAMF,YAAY,CAACD,IAAb,EAArB;AAEA,QAAMR,KAAK,CAAE,kCAAF,EAAqC;AAChDY,IAAAA,MAAM,EAAE,MADwC;AAEhDC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBC,MAAAA,UAAU,EAAEf,IAAI,CAACgB,EAAL,EADK;AAEjBC,MAAAA,MAAM,EAAG,GAAEP,IAAI,CAACO,MAAO,EAFN;AAGjBb,MAAAA,MAHiB;AAIjBc,MAAAA,QAAQ,EAAE;AAJO,KAAf,CAF0C;AAQhDC,IAAAA,OAAO,EAAE;AACL,sBAAgB;AADX;AARuC,GAArC,CAAX;AAYH,CAlBD;;AAqBA,MAAMC,KAAK,GAAGC,KAAK,IACf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,EAEI;AAAK,EAAA,GAAG,EAAEA,KAAK,CAACC,IAAN,CAAWC,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAiBF,KAAK,CAACC,IAAN,CAAWE,WAA5B,CAHJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAYH,KAAK,CAACC,IAAN,CAAWG,KAAvB,CAJJ,EAKI;AAAQ,EAAA,IAAI,EAAC,QAAb;AAAsB,EAAA,OAAO,EAAE,MAAMtB,aAAa,CAACkB,KAAK,CAACC,IAAN,CAAWlB,MAAZ,CAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBALJ,EAMJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iDAA8CiB,KAAK,CAACK,SAAN,CAAgBC,MAAhB,CAAwBC,QAAD,IAAcA,QAAQ,CAACxB,MAAT,KAAoBiB,KAAK,CAACC,IAAN,CAAWlB,MAApE,EAA4EyB,MAA1H,CANI,EAOI,MAAC,IAAD;AAAM,EAAA,IAAI,EAAC,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI;AAAG,EAAA,KAAK,EAAC,YAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,CAPJ,CADJ;;AAeAT,KAAK,CAACU,eAAN,GAAwB,gBAAeC,OAAf,EAAwB;AAC5C,QAAM3B,MAAM,GAAG2B,OAAO,CAACC,KAAR,CAAcC,MAA7B;AACA,QAAMC,GAAG,GAAG,MAAMnC,KAAK,CAAE,+BAA8BK,MAAO,EAAvC,CAAvB;AACA,QAAMkB,IAAI,GAAG,MAAMY,GAAG,CAAC3B,IAAJ,EAAnB;AACA,QAAM;AAAEmB,IAAAA;AAAF,MAAgB,MAAMxB,gBAA5B,CAJ4C,CAKhD;AACA;AAEA;;AAEI,SAAO;AACHoB,IAAAA;AADG,GAAP;AAGH,CAbD;;AAeA,eAAeF,KAAf","sourcesContent":["import fetch from 'isomorphic-unfetch';\nimport uuid from 'uuid';\nimport Link from 'next/link';\nimport { getCustomersCart } from '../services/cart-item-service';\n\n\n\nconst addItemToCart = async (itemId) => {\n    const customerResponse = await fetch('http://localhost:5555/customers');\n    const [customer] = await customerResponse.json();\n    const cartResponse = await fetch(`http://localhost:5555/customers/${customer.customerId}/carts`);\n    const [cart] = await cartResponse.json();\n    \n    await fetch(`http://localhost:5555/cart-items`, {\n    method: 'POST',\n    body: JSON.stringify({\n        cartItemId: uuid.v4(),\n        cartId: `${cart.cartId}`,\n        itemId,\n        quantity: 1\n    }),\n    headers: {\n        'Content-Type': 'application/json'\n    }\n});\n}\n\n\nconst Index = props => (\n    <section>\n        <h1>Item Details</h1>\n        <img src={props.item.image} />\n        <p>Description: {props.item.description}</p>\n        <p>Price: ${props.item.price}</p>\n        <button type=\"button\" onClick={() => addItemToCart(props.item.itemId)}>Add to Cart</button>\n<p>Number of times this item is in the cart: {props.cartItems.filter((cartItem) => cartItem.itemId === props.item.itemId).length}</p>\n        <Link href=\"/cart\">\n            <a title=\"view cart!\">view cart!</a>\n        </Link>\n    </section>\n);\n\n\nIndex.getInitialProps = async function(context) {\n    const itemId = context.query.itemid;\n    const res = await fetch(`http://localhost:5555/items/${itemId}`);\n    const item = await res.json();\n    const { cartItems } = await getCustomersCart; \n//    console.log(itemId)\n//    console.log(res)\n            \n//    console.log(`Show data fetched. Item: ${item}` );\n    \n    return {\n        item\n    };\n};\n\nexport default Index;"]},"metadata":{},"sourceType":"module"}