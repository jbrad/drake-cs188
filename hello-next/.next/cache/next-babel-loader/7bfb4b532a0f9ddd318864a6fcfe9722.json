{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/scottmolloy/Desktop/04 software_engineering/cartTest/hello-next/pages/items/index.js\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Link from 'next/link';\nimport fetch from 'isomorphic-unfetch';\nimport uuid from 'uuid';\n\nvar addItemToCart = function addItemToCart(itemId) {\n  var customerResponse, _await$customerRespon, _await$customerRespon2, customer, cartResponse, _await$cartResponse$j, _await$cartResponse$j2, cart;\n\n  return _regeneratorRuntime.async(function addItemToCart$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(fetch(\"http://localhost:5555/customers\"));\n\n        case 2:\n          customerResponse = _context.sent;\n          _context.next = 5;\n          return _regeneratorRuntime.awrap(customerResponse.json());\n\n        case 5:\n          _await$customerRespon = _context.sent;\n          _await$customerRespon2 = _slicedToArray(_await$customerRespon, 1);\n          customer = _await$customerRespon2[0];\n          _context.next = 10;\n          return _regeneratorRuntime.awrap(fetch(\"http://localhost:5555/customers/\".concat(customer.customerId, \"/carts\")));\n\n        case 10:\n          cartResponse = _context.sent;\n          _context.next = 13;\n          return _regeneratorRuntime.awrap(cartResponse.json());\n\n        case 13:\n          _await$cartResponse$j = _context.sent;\n          _await$cartResponse$j2 = _slicedToArray(_await$cartResponse$j, 1);\n          cart = _await$cartResponse$j2[0];\n          _context.next = 18;\n          return _regeneratorRuntime.awrap(fetch(\"http://localhost:5555/cart-items\", {\n            method: 'POST',\n            body: JSON.stringify({\n              cartItemId: uuid.v4(),\n              cartId: '',\n              itemId: itemId,\n              quantity: 1\n            }),\n            headers: {\n              'Content-Type': 'application/json'\n            }\n          }));\n\n        case 18:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nvar Index = function Index(props) {\n  return __jsx(\"section\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }, __jsx(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, \" Items Available for Sale\"), __jsx(\"ul\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, props.items.map(function (item) {\n    return __jsx(\"li\", {\n      key: item.itemId,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }\n    }, __jsx(Link, {\n      href: \"/items/[{itemId}]\",\n      as: \"/items/\".concat(item.itemId),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 21\n      }\n    }, __jsx(\"a\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 25\n      }\n    }, item.description)));\n  })));\n};\n\nIndex.getInitialProps = function _callee() {\n  var res, items;\n  return _regeneratorRuntime.async(function _callee$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return _regeneratorRuntime.awrap(fetch(\"http://localhost:5555/items\"));\n\n        case 2:\n          res = _context2.sent;\n          _context2.next = 5;\n          return _regeneratorRuntime.awrap(res.json());\n\n        case 5:\n          items = _context2.sent;\n          console.log(\"Show data fetched. Count: \".concat(items.length));\n          return _context2.abrupt(\"return\", {\n            items: items\n          });\n\n        case 8:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexport default Index;","map":{"version":3,"sources":["/Users/scottmolloy/Desktop/04 software_engineering/cartTest/hello-next/pages/items/index.js"],"names":["Link","fetch","uuid","addItemToCart","itemId","customerResponse","json","customer","customerId","cartResponse","cart","method","body","JSON","stringify","cartItemId","v4","cartId","quantity","headers","Index","props","items","map","item","description","getInitialProps","res","console","log","length"],"mappings":";;;;;;;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,IAAP,MAAiB,MAAjB;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAAOC,MAAP;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACaH,KAAK,mCADlB;;AAAA;AACZI,UAAAA,gBADY;AAAA;AAAA,2CAEOA,gBAAgB,CAACC,IAAjB,EAFP;;AAAA;AAAA;AAAA;AAEXC,UAAAA,QAFW;AAAA;AAAA,2CAGSN,KAAK,2CAAoCM,QAAQ,CAACC,UAA7C,YAHd;;AAAA;AAGZC,UAAAA,YAHY;AAAA;AAAA,2CAIGA,YAAY,CAACH,IAAb,EAJH;;AAAA;AAAA;AAAA;AAIXI,UAAAA,IAJW;AAAA;AAAA,2CAMZT,KAAK,qCAAqC;AAChDU,YAAAA,MAAM,EAAE,MADwC;AAEhDC,YAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBC,cAAAA,UAAU,EAAEb,IAAI,CAACc,EAAL,EADK;AAEjBC,cAAAA,MAAM,EAAE,EAFS;AAGjBb,cAAAA,MAAM,EAANA,MAHiB;AAIjBc,cAAAA,QAAQ,EAAE;AAJO,aAAf,CAF0C;AAQhDC,YAAAA,OAAO,EAAE;AACL,8BAAgB;AADX;AARuC,WAArC,CANO;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAtB;;AAoBA,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAAAC,KAAK;AAAA,SACf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKA,KAAK,CAACC,KAAN,CAAYC,GAAZ,CAAgB,UAAAC,IAAI;AAAA,WACjB;AAAI,MAAA,GAAG,EAAEA,IAAI,CAACpB,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,MAAC,IAAD;AAAM,MAAA,IAAI,EAAC,mBAAX;AAA+B,MAAA,EAAE,mBAAYoB,IAAI,CAACpB,MAAjB,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIoB,IAAI,CAACC,WAAT,CADJ,CADJ,CADiB;AAAA,GAApB,CADL,CAFJ,CADe;AAAA,CAAnB;;AAgBAL,KAAK,CAACM,eAAN,GAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACFzB,KAAK,+BADH;;AAAA;AACd0B,UAAAA,GADc;AAAA;AAAA,2CAEAA,GAAG,CAACrB,IAAJ,EAFA;;AAAA;AAEdgB,UAAAA,KAFc;AAIpBM,UAAAA,OAAO,CAACC,GAAR,qCAAyCP,KAAK,CAACQ,MAA/C;AAJoB,4CAMb;AACHR,YAAAA,KAAK,EAALA;AADG,WANa;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAxB;;AAWA,eAAeF,KAAf","sourcesContent":["import Link from 'next/link';\nimport fetch from 'isomorphic-unfetch';\nimport uuid from 'uuid';\n\nconst addItemToCart = async (itemId) => {\n    const customerResponse = await fetch(`http://localhost:5555/customers`);\n    const [customer] = await customerResponse.json();\n    const cartResponse = await fetch(`http://localhost:5555/customers/${customer.customerId}/carts`);\n    const [cart] = await cartResponse.json();\n    \n    await fetch(`http://localhost:5555/cart-items`, {\n    method: 'POST',\n    body: JSON.stringify({\n        cartItemId: uuid.v4(),\n        cartId: '',\n        itemId,\n        quantity: 1\n    }),\n    headers: {\n        'Content-Type': 'application/json'\n    }\n})\n}\n\nconst Index = props => (\n    <section>\n        <h1> Items Available for Sale</h1>\n        <ul>\n            {props.items.map(item => (\n                <li key={item.itemId}>\n                    <Link href=\"/items/[{itemId}]\" as={`/items/${item.itemId}`}>\n                        <a>{item.description}</a>\n                    </Link>\n                </li>\n            ))}\n        </ul>\n    </section>\n);\n\n\nIndex.getInitialProps = async function() {\n    const res = await fetch(`http://localhost:5555/items`);\n    const items = await res.json();\n    \n    console.log(`Show data fetched. Count: ${items.length}`);\n                          \n    return {\n        items\n    };\n};\n\nexport default Index;\t"]},"metadata":{},"sourceType":"module"}