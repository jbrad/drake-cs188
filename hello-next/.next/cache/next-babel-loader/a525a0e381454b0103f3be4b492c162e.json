{"ast":null,"code":"var _jsxFileName = \"/Users/scottmolloy/Desktop/04 software_engineering/cartTest/hello-next/pages/cart.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Link from 'next/link';\nimport fetch from 'isomorphic-unfetch';\n\nconst removeItemFromCart = async cartItem => {\n  await fetch(`http://localhost:5555/cart-items/${cartItem.cartItemId}`, {\n    method: 'DELETE'\n  });\n  location.reload();\n};\n\nconst Index = props => __jsx(\"section\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }\n}, __jsx(\"h1\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 9\n  }\n}, props.customer.firstName, \"'s Cart\"), __jsx(\"p\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }\n}, \"You have \", props.cartItems.length, \" \", props.cartItems.length === 1 ? 'item' : 'items', \" in your cart.\"), __jsx(\"ul\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }\n}, props.items.map((item, index) => __jsx(\"li\", {\n  key: item.itemId,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 17\n  }\n}, __jsx(Link, {\n  href: \"/items/[itemId]\",\n  as: `/items/${item.itemId}`,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 21\n  }\n}, __jsx(\"a\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 25\n  }\n}, item.description)), __jsx(\"button\", {\n  type: \"button\",\n  onClick: () => removeItemFromCart(props.cartItems[index]),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 21\n  }\n}, \"Remove\")))));\n\nIndex.getInitialProps = async function () {\n  const customerResponse = await fetch(`http://localhost:5555/customers`);\n  const [customer] = await customerResponse.json();\n  const cartResponse = await fetch(`http://localhost:5555/customers/${customer.customerId}/carts`);\n  const [cart] = await cartResponse.json();\n  const cartItemResponse = await fetch(`http://localhost:5555/carts/${cart.cartId}/cart-items`);\n  const cartItems = await cartItemResponse.json();\n  const itemsToFetch = cartItems.map(cartItem => fetch(`http://localhost:5555/items/${cartItem.itemId}`));\n  const itemResponses = await Promise.all(itemsToFetch);\n  const items = await Promise.all(itemResponses.map(itemResponse => itemResponse.json()));\n  return {\n    customer,\n    cartItems,\n    items\n  };\n};\n\nexport default Index;","map":{"version":3,"sources":["/Users/scottmolloy/Desktop/04 software_engineering/cartTest/hello-next/pages/cart.js"],"names":["Link","fetch","removeItemFromCart","cartItem","cartItemId","method","location","reload","Index","props","customer","firstName","cartItems","length","items","map","item","index","itemId","description","getInitialProps","customerResponse","json","cartResponse","customerId","cart","cartItemResponse","cartId","itemsToFetch","itemResponses","Promise","all","itemResponse"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;AAEA,MAAMC,kBAAkB,GAAG,MAAOC,QAAP,IAAoB;AAC3C,QAAMF,KAAK,CAAE,oCAAmCE,QAAQ,CAACC,UAAW,EAAzD,EAA4D;AACnEC,IAAAA,MAAM,EAAE;AAD2D,GAA5D,CAAX;AAGAC,EAAAA,QAAQ,CAACC,MAAT;AACH,CALD;;AAQA,MAAMC,KAAK,GAAGC,KAAK,IACf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAKA,KAAK,CAACC,QAAN,CAAeC,SAApB,YADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAaF,KAAK,CAACG,SAAN,CAAgBC,MAA7B,OAAsCJ,KAAK,CAACG,SAAN,CAAgBC,MAAhB,KAA2B,CAA3B,GAA+B,MAA/B,GAAwC,OAA9E,mBAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACKJ,KAAK,CAACK,KAAN,CAAYC,GAAZ,CAAgB,CAACC,IAAD,EAAOC,KAAP,KACb;AAAI,EAAA,GAAG,EAAED,IAAI,CAACE,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI,MAAC,IAAD;AAAM,EAAA,IAAI,EAAC,iBAAX;AAA6B,EAAA,EAAE,EAAG,UAASF,IAAI,CAACE,MAAO,EAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAIF,IAAI,CAACG,WAAT,CADJ,CADJ,EAII;AAAQ,EAAA,IAAI,EAAC,QAAb;AAAsB,EAAA,OAAO,EAAE,MAAMjB,kBAAkB,CAACO,KAAK,CAACG,SAAN,CAAgBK,KAAhB,CAAD,CAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ,CADH,CADL,CAHJ,CADJ;;AAkBAT,KAAK,CAACY,eAAN,GAAwB,kBAAiB;AACrC,QAAMC,gBAAgB,GAAG,MAAMpB,KAAK,CAAE,iCAAF,CAApC;AACA,QAAM,CAACS,QAAD,IAAa,MAAMW,gBAAgB,CAACC,IAAjB,EAAzB;AACA,QAAMC,YAAY,GAAG,MAAMtB,KAAK,CAAE,mCAAkCS,QAAQ,CAACc,UAAW,QAAxD,CAAhC;AACA,QAAM,CAACC,IAAD,IAAS,MAAMF,YAAY,CAACD,IAAb,EAArB;AACA,QAAMI,gBAAgB,GAAG,MAAMzB,KAAK,CAAE,+BAA8BwB,IAAI,CAACE,MAAO,aAA5C,CAApC;AACA,QAAMf,SAAS,GAAG,MAAMc,gBAAgB,CAACJ,IAAjB,EAAxB;AACA,QAAMM,YAAY,GAAGhB,SAAS,CAACG,GAAV,CAAeZ,QAAD,IAAcF,KAAK,CAAE,+BAA8BE,QAAQ,CAACe,MAAO,EAAhD,CAAjC,CAArB;AACA,QAAMW,aAAa,GAAG,MAAMC,OAAO,CAACC,GAAR,CAAYH,YAAZ,CAA5B;AACA,QAAMd,KAAK,GAAG,MAAMgB,OAAO,CAACC,GAAR,CAAYF,aAAa,CAACd,GAAd,CAAmBiB,YAAD,IAAkBA,YAAY,CAACV,IAAb,EAApC,CAAZ,CAApB;AAEA,SAAO;AACHZ,IAAAA,QADG;AAEHE,IAAAA,SAFG;AAGHE,IAAAA;AAHG,GAAP;AAKH,CAhBD;;AAkBA,eAAeN,KAAf","sourcesContent":["import Link from 'next/link';\nimport fetch from 'isomorphic-unfetch';\n\nconst removeItemFromCart = async (cartItem) => {\n    await fetch(`http://localhost:5555/cart-items/${cartItem.cartItemId}`, {\n        method: 'DELETE'\n    })\n    location.reload();\n};\n\n\nconst Index = props => (\n    <section>\n        <h1>{props.customer.firstName}'s Cart</h1>\n        <p>You have {props.cartItems.length} {props.cartItems.length === 1 ? 'item' : 'items'} in your cart.</p>\n        <ul>\n            {props.items.map((item, index) => (\n                <li key={item.itemId}>\n                    <Link href=\"/items/[itemId]\" as={`/items/${item.itemId}`}>\n                        <a>{item.description}</a>\n                    </Link>\n                    <button type=\"button\" onClick={() => removeItemFromCart(props.cartItems[index])}>Remove</button>\n                </li>\n            ))}\n        </ul>\n    </section>\n);\n\n\nIndex.getInitialProps = async function() {\n    const customerResponse = await fetch(`http://localhost:5555/customers`);\n    const [customer] = await customerResponse.json();\n    const cartResponse = await fetch(`http://localhost:5555/customers/${customer.customerId}/carts`);\n    const [cart] = await cartResponse.json();\n    const cartItemResponse = await fetch(`http://localhost:5555/carts/${cart.cartId}/cart-items`);\n    const cartItems = await cartItemResponse.json();\n    const itemsToFetch = cartItems.map((cartItem) => fetch(`http://localhost:5555/items/${cartItem.itemId}`));\n    const itemResponses = await Promise.all(itemsToFetch);\n    const items = await Promise.all(itemResponses.map((itemResponse) => itemResponse.json()));\n    \n    return {\n        customer,\n        cartItems,\n        items \n    };\n};\n\nexport default Index;\n\n"]},"metadata":{},"sourceType":"module"}