{"ast":null,"code":"var _jsxFileName = \"/Users/scottmolloy/Desktop/04 software_engineering/cartTest/hello-next/pages/items/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Link from 'next/link';\nimport fetch from 'isomorphic-unfetch';\nimport uuid from 'uuid';\n\nconst addItemToCart = async itemId => {\n  const customerResponse = await fetch(`http://localhost:5555/customers`);\n  const [customer] = await customerResponse.json();\n  const cartResponse = await fetch(`http://localhost:5555/customers/${customer.customerId}/carts`);\n  const [cart] = await cartResponse.json();\n  await fetch(`http://localhost:5555/cart-items`, {\n    method: 'POST',\n    body: JSON.stringify({\n      cartItemId: uuid.v4(),\n      cartId: '',\n      itemId,\n      quantity: 1\n    }),\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  });\n};\n\nconst Index = props => __jsx(\"section\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }\n}, __jsx(\"h1\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }\n}, \" Items Available for Sale\"), __jsx(\"ul\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }\n}, props.items.map(item => __jsx(\"li\", {\n  key: item.itemId,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 17\n  }\n}, __jsx(Link, {\n  href: \"/items/[{itemId}]\",\n  as: `/items/${item.itemId}`,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 21\n  }\n}, __jsx(\"a\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 25\n  }\n}, item.description))))));\n\nIndex.getInitialProps = async function () {\n  const res = await fetch(`http://localhost:5555/items`);\n  const items = await res.json();\n  console.log(`Show data fetched. Count: ${items.length}`);\n  return {\n    items\n  };\n};\n\nexport default Index;","map":{"version":3,"sources":["/Users/scottmolloy/Desktop/04 software_engineering/cartTest/hello-next/pages/items/index.js"],"names":["Link","fetch","uuid","addItemToCart","itemId","customerResponse","customer","json","cartResponse","customerId","cart","method","body","JSON","stringify","cartItemId","v4","cartId","quantity","headers","Index","props","items","map","item","description","getInitialProps","res","console","log","length"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,IAAP,MAAiB,MAAjB;;AAEA,MAAMC,aAAa,GAAG,MAAOC,MAAP,IAAkB;AACpC,QAAMC,gBAAgB,GAAG,MAAMJ,KAAK,CAAE,iCAAF,CAApC;AACA,QAAM,CAACK,QAAD,IAAa,MAAMD,gBAAgB,CAACE,IAAjB,EAAzB;AACA,QAAMC,YAAY,GAAG,MAAMP,KAAK,CAAE,mCAAkCK,QAAQ,CAACG,UAAW,QAAxD,CAAhC;AACA,QAAM,CAACC,IAAD,IAAS,MAAMF,YAAY,CAACD,IAAb,EAArB;AAEA,QAAMN,KAAK,CAAE,kCAAF,EAAqC;AAChDU,IAAAA,MAAM,EAAE,MADwC;AAEhDC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBC,MAAAA,UAAU,EAAEb,IAAI,CAACc,EAAL,EADK;AAEjBC,MAAAA,MAAM,EAAE,EAFS;AAGjBb,MAAAA,MAHiB;AAIjBc,MAAAA,QAAQ,EAAE;AAJO,KAAf,CAF0C;AAQhDC,IAAAA,OAAO,EAAE;AACL,sBAAgB;AADX;AARuC,GAArC,CAAX;AAYH,CAlBD;;AAoBA,MAAMC,KAAK,GAAGC,KAAK,IACf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACKA,KAAK,CAACC,KAAN,CAAYC,GAAZ,CAAgBC,IAAI,IACjB;AAAI,EAAA,GAAG,EAAEA,IAAI,CAACpB,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI,MAAC,IAAD;AAAM,EAAA,IAAI,EAAC,mBAAX;AAA+B,EAAA,EAAE,EAAG,UAASoB,IAAI,CAACpB,MAAO,EAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAIoB,IAAI,CAACC,WAAT,CADJ,CADJ,CADH,CADL,CAFJ,CADJ;;AAgBAL,KAAK,CAACM,eAAN,GAAwB,kBAAiB;AACrC,QAAMC,GAAG,GAAG,MAAM1B,KAAK,CAAE,6BAAF,CAAvB;AACA,QAAMqB,KAAK,GAAG,MAAMK,GAAG,CAACpB,IAAJ,EAApB;AAEAqB,EAAAA,OAAO,CAACC,GAAR,CAAa,6BAA4BP,KAAK,CAACQ,MAAO,EAAtD;AAEA,SAAO;AACHR,IAAAA;AADG,GAAP;AAGH,CATD;;AAWA,eAAeF,KAAf","sourcesContent":["import Link from 'next/link';\nimport fetch from 'isomorphic-unfetch';\nimport uuid from 'uuid';\n\nconst addItemToCart = async (itemId) => {\n    const customerResponse = await fetch(`http://localhost:5555/customers`);\n    const [customer] = await customerResponse.json();\n    const cartResponse = await fetch(`http://localhost:5555/customers/${customer.customerId}/carts`);\n    const [cart] = await cartResponse.json();\n    \n    await fetch(`http://localhost:5555/cart-items`, {\n    method: 'POST',\n    body: JSON.stringify({\n        cartItemId: uuid.v4(),\n        cartId: '',\n        itemId,\n        quantity: 1\n    }),\n    headers: {\n        'Content-Type': 'application/json'\n    }\n})\n}\n\nconst Index = props => (\n    <section>\n        <h1> Items Available for Sale</h1>\n        <ul>\n            {props.items.map(item => (\n                <li key={item.itemId}>\n                    <Link href=\"/items/[{itemId}]\" as={`/items/${item.itemId}`}>\n                        <a>{item.description}</a>\n                    </Link>\n                </li>\n            ))}\n        </ul>\n    </section>\n);\n\n\nIndex.getInitialProps = async function() {\n    const res = await fetch(`http://localhost:5555/items`);\n    const items = await res.json();\n    \n    console.log(`Show data fetched. Count: ${items.length}`);\n                          \n    return {\n        items\n    };\n};\n\nexport default Index;\t"]},"metadata":{},"sourceType":"module"}